{"ast":null,"code":"import _regeneratorRuntime from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alexey/Desktop/CEN4010/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alexey/Desktop/CEN4010/src/Components/BookInfo.js\";\nimport React from \"react\";\nimport Titles from \"./Titles\";\nimport Description from \"./Description\";\nimport Tabs from \"./Tabs\";\nvar API = '/book/';\n\nvar BookInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookInfo, _React$Component);\n\n  function BookInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      isbn: _this.props.match.params.isbn,\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    _this.componentWillMount =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch(API + _this.state.isbn, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BookInfo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Description, {\n        title: this.state.isbn,\n        description: \"\",\n        price: \"9.00\",\n        cover: \"https://images.penguinrandomhouse.com/cover/9780143128571\",\n        author: \"William Shakespeare\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BookInfo;\n}(React.Component);\n\n;\nexport default BookInfo;","map":{"version":3,"sources":["/home/alexey/Desktop/CEN4010/src/Components/BookInfo.js"],"names":["React","Titles","Description","Tabs","API","BookInfo","state","title","isbn","props","match","params","response","post","responseToPost","componentWillMount","e","preventDefault","fetch","method","headers","body","JSON","stringify","json","setState","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,IAAMC,GAAG,GAAG,QAAZ;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,IAFxB;AAGNI,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,cAAc,EAAE;AALV,K;;UAQRC,kB;;;;;+BAAqB,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,gBAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,uBAEIC,KAAK,CAACd,GAAG,GAAG,MAAKE,KAAL,CAAWE,IAAlB,EAAwB;AAClDW,kBAAAA,MAAM,EAAE,MAD0C;AAElDC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAFyC;AAKlDC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,oBAAAA,IAAI,EAAE,MAAKP,KAAL,CAAWO;AAAnB,mBAAf;AAL4C,iBAAxB,CAFT;;AAAA;AAEbD,gBAAAA,QAFa;AAAA;AAAA,uBASFA,QAAQ,CAACY,IAAT,EATE;;AAAA;AASfH,gBAAAA,IATe;;AAUnB,sBAAKI,QAAL,CAAc;AAAEX,kBAAAA,cAAc,EAAEO;AAAlB,iBAAd;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAaZ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEL,oBAAC,WAAD;AAAc,QAAA,KAAK,EAAI,KAAKf,KAAL,CAAWE,IAAlC;AAAwC,QAAA,WAAW,EAAG,EAAtD;AAAyD,QAAA,KAAK,EAAG,MAAjE;AAAwE,QAAA,KAAK,EAAG,2DAAhF;AAA4I,QAAA,MAAM,EAAG,qBAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,EAGL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHK,CADF;AAOD;;;;EA9BoBR,KAAK,CAAC0B,S;;AA+B5B;AAED,eAAerB,QAAf","sourcesContent":["import React from \"react\";\n\nimport Titles from \"./Titles\";\nimport Description from \"./Description\";\nimport Tabs from \"./Tabs\";\nconst API = '/book/';\n\nclass BookInfo extends React.Component {\n  state = {\n    title: '',\n    isbn: this.props.match.params.isbn,\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n\n  componentWillMount = async e => {\n    e.preventDefault();\n    const response = await fetch(API + this.state.isbn, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n\t\tconst body = await response.json();\n    this.setState({ responseToPost: body });\n  };\n\n  render() {\n    return (\n      <div>\n\t<Titles />\n\t<Description  title = {this.state.isbn} description = \"\" price = \"9.00\" cover = \"https://images.penguinrandomhouse.com/cover/9780143128571\" author = \"William Shakespeare\"/>\n\t<Tabs />\n      </div>\n    );\n  }\n};\n\nexport default BookInfo;\n"]},"metadata":{},"sourceType":"module"}