{"ast":null,"code":"var Sequence = require('./Sequence');\n\nvar Util = require('util');\n\nvar Packets = require('../packets');\n\nmodule.exports = Quit;\nUtil.inherits(Quit, Sequence);\n\nfunction Quit(options, callback) {\n  if (!callback && typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  Sequence.call(this, options, callback);\n  this._started = false;\n}\n\nQuit.prototype.end = function end(err) {\n  if (this._ended) {\n    return;\n  }\n\n  if (!this._started) {\n    Sequence.prototype.end.call(this, err);\n    return;\n  }\n\n  if (err && err.code === 'ECONNRESET' && err.syscall === 'read') {\n    // Ignore read errors after packet sent\n    Sequence.prototype.end.call(this);\n    return;\n  }\n\n  Sequence.prototype.end.call(this, err);\n};\n\nQuit.prototype.start = function () {\n  this._started = true;\n  this.emit('packet', new Packets.ComQuitPacket());\n};","map":null,"metadata":{},"sourceType":"script"}