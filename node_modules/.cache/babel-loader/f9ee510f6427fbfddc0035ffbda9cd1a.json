{"ast":null,"code":"// Language-neutral expression to match ER_UPDATE_INFO\nvar ER_UPDATE_INFO_REGEXP = /^[^:0-9]+: [0-9]+[^:0-9]+: ([0-9]+)[^:0-9]+: [0-9]+[^:0-9]*$/;\nmodule.exports = OkPacket;\n\nfunction OkPacket(options) {\n  options = options || {};\n  this.fieldCount = undefined;\n  this.affectedRows = undefined;\n  this.insertId = undefined;\n  this.serverStatus = undefined;\n  this.warningCount = undefined;\n  this.message = undefined;\n  this.protocol41 = options.protocol41;\n}\n\nOkPacket.prototype.parse = function (parser) {\n  this.fieldCount = parser.parseUnsignedNumber(1);\n  this.affectedRows = parser.parseLengthCodedNumber();\n  this.insertId = parser.parseLengthCodedNumber();\n\n  if (this.protocol41) {\n    this.serverStatus = parser.parseUnsignedNumber(2);\n    this.warningCount = parser.parseUnsignedNumber(2);\n  }\n\n  this.message = parser.parsePacketTerminatedString();\n  this.changedRows = 0;\n  var m = ER_UPDATE_INFO_REGEXP.exec(this.message);\n\n  if (m !== null) {\n    this.changedRows = parseInt(m[1], 10);\n  }\n};\n\nOkPacket.prototype.write = function (writer) {\n  writer.writeUnsignedNumber(1, 0x00);\n  writer.writeLengthCodedNumber(this.affectedRows || 0);\n  writer.writeLengthCodedNumber(this.insertId || 0);\n\n  if (this.protocol41) {\n    writer.writeUnsignedNumber(2, this.serverStatus || 0);\n    writer.writeUnsignedNumber(2, this.warningCount || 0);\n  }\n\n  writer.writeString(this.message);\n};","map":null,"metadata":{},"sourceType":"script"}